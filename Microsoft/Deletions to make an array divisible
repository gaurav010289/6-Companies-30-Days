class Solution {
public:
    int gcd(int a, int b){
        if (b == 0)
            return a;
        return gcd(b, a % b);
    }
 
    int findhcf(vector<int> &arr){
        int n = arr.size();
        int result = arr[0];
        for (int i = 1; i < n; i++){
            result = gcd(arr[i], result);
            if(result == 1){
                return 1;
            }
        }
        return result;
    }
    int minOperations(vector<int>& nums, vector<int>& numsDivide) {
        int hcf = findhcf(numsDivide);
        sort(nums.begin(),nums.end());
        if(nums[0] > hcf)return -1;
        int n = nums.size(),i = 0;
        while(i < n && hcf % nums[i] != 0)i++;
        if(i == n)return -1;
        return i;
    }
};
